import{_ as s,c as i,o as a,a1 as n}from"./chunks/framework.DL1atyyQ.js";const E=JSON.parse('{"title":"Grunder i programmering med Arduino","description":"","frontmatter":{"outline":[1,6]},"headers":[],"relativePath":"applied-prog/part3/index.md","filePath":"applied-prog/part3/index.md"}'),l={name:"applied-prog/part3/index.md"},e=n(`<h1 id="grunder-i-programmering-med-arduino" tabindex="-1">Grunder i programmering med Arduino <a class="header-anchor" href="#grunder-i-programmering-med-arduino" aria-label="Permalink to &quot;Grunder i programmering med Arduino&quot;">​</a></h1><h2 id="inledning" tabindex="-1">Inledning <a class="header-anchor" href="#inledning" aria-label="Permalink to &quot;Inledning&quot;">​</a></h2><p>För att programmera en Arduino använder man <strong>C++</strong>, ett kraftfullt och mångsidigt programmeringsspråk. Vi kommer att täcka grunderna i C++ och hur du använder dessa för att programmera en Arduino.</p><h2 id="_1-vad-ar-c" tabindex="-1">1. Vad är C++? <a class="header-anchor" href="#_1-vad-ar-c" aria-label="Permalink to &quot;1. Vad är C++?&quot;">​</a></h2><p>C++ är ett allmänt programmeringsspråk som används för att skapa allt från datorspel till operativsystem. Det är ett språk som är snabbt och effektivt, vilket gör det idealiskt för programmering nära hårdvaran, som med Arduino. När vi programmerar en Arduino, skriver vi kod i C++ som sedan laddas upp till mikrokontrollern på Arduino-kortet för att styra olika komponenter som LED-lampor, motorer och sensorer.</p><h2 id="_2-grunder-i-c-for-arduino" tabindex="-1">2. Grunder i C++ för Arduino <a class="header-anchor" href="#_2-grunder-i-c-for-arduino" aria-label="Permalink to &quot;2. Grunder i C++ för Arduino&quot;">​</a></h2><h3 id="variabler" tabindex="-1">Variabler <a class="header-anchor" href="#variabler" aria-label="Permalink to &quot;Variabler&quot;">​</a></h3><p>En variabel är som en låda där du kan lagra data. I C++ måste du först deklarera vilken typ av data som ska lagras i variabeln.</p><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ledPin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Här deklareras en variabel som heter ledPin och tilldelas värdet 13</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h3 id="datatyper" tabindex="-1">Datatyper <a class="header-anchor" href="#datatyper" aria-label="Permalink to &quot;Datatyper&quot;">​</a></h3><p>De vanligaste datatyperna som används i C++ för Arduino är:</p><ul><li><strong>int</strong>: Heltal (t.ex. -2, 0, 7)</li><li><strong>float</strong>: Decimaltal (t.ex. 3.14, -0.001)</li><li><strong>char</strong>: Enskilda tecken (t.ex. &#39;a&#39;, &#39;9&#39;)</li><li><strong>boolean</strong>: Sanna eller falska värden (true, false)</li></ul><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temperatur </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // En flyttalsvariabel som lagrar temperaturen</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">boolean ledStatus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // En boolean som håller reda på om en LED är på eller av</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h3 id="operatorer" tabindex="-1">Operatorer <a class="header-anchor" href="#operatorer" aria-label="Permalink to &quot;Operatorer&quot;">​</a></h3><p>Operatörer används för att utföra operationer på variabler och värden.</p><p>Vanliga operatörer inkluderar:</p><ul><li><strong>=</strong> : Tilldelning (t.ex. x = 10;)</li><li><strong>+</strong> : Addition (t.ex. x = y + 2;)</li><li><strong>-</strong> : Subtraktion (t.ex. x = y - 3;)</li><li><strong>==</strong> : Jämförelse (t.ex. if (x == 10) {...})</li></ul><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // c blir 15</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><h3 id="kontrollstrukturer" tabindex="-1">Kontrollstrukturer <a class="header-anchor" href="#kontrollstrukturer" aria-label="Permalink to &quot;Kontrollstrukturer&quot;">​</a></h3><p>Kontrollstrukturer låter dig styra flödet i ditt program.</p><ul><li><strong>if</strong> : Utför kod om ett villkor är sant.</li><li><strong>else</strong> : Utför kod om villkoret i &#39;<strong>if</strong>&#39; är falskt.</li></ul><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ledStatus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, HIGH);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Tänd LED om ledStatus är true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, LOW);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Släck LED annars</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><h3 id="funktioner" tabindex="-1">Funktioner <a class="header-anchor" href="#funktioner" aria-label="Permalink to &quot;Funktioner&quot;">​</a></h3><p>Funktioner är kodblock som kan anropas från andra delar av programmet. De används för att undvika att skriva samma kod flera gånger.</p><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tä</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ndLED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, HIGH);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Tänd LED</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> slä</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ckLED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, LOW);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Släck LED</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><h3 id="loopar" tabindex="-1">Loopar <a class="header-anchor" href="#loopar" aria-label="Permalink to &quot;Loopar&quot;">​</a></h3><p>Loopar används för att repetera kodblock.</p><ul><li><strong>for</strong> : Upprepar kod ett bestämt antal gånger.</li><li><strong>while</strong> : Upprepar kod så länge ett villkor är sant.</li></ul><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, HIGH);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Tänd LED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                  // Vänta 500 ms</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, LOW);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Släck LED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                  // Vänta 500 ms</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><h3 id="kommentarer" tabindex="-1">Kommentarer <a class="header-anchor" href="#kommentarer" aria-label="Permalink to &quot;Kommentarer&quot;">​</a></h3><p>Kommentarer är textrader i koden som ignoreras av kompilatorn. De används för att förklara vad koden gör.</p><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Detta är en enkel kommentar</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">Detta är en</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">fleradig kommentar</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><h2 id="_4-arduino-specifika-kommandon" tabindex="-1">4. Arduino-specifika kommandon <a class="header-anchor" href="#_4-arduino-specifika-kommandon" aria-label="Permalink to &quot;4. Arduino-specifika kommandon&quot;">​</a></h2><p>Arduino använder en särskild uppsättning funktioner och bibliotek för att styra hårdvara.</p><h3 id="setup-och-loop" tabindex="-1">setup() och loop() <a class="header-anchor" href="#setup-och-loop" aria-label="Permalink to &quot;setup() och loop()&quot;">​</a></h3><p>Varje Arduino-program (kallas &quot;<strong>sketch</strong>&quot;) måste ha två huvudfunktioner:</p><ul><li><strong>setup()</strong> : Körs en gång när programmet startar. Här initialiseras variabler, ställer in pin-lägen, etc.</li><li><strong>loop()</strong> : Körs om och om igen tills programmet avslutas. Här sker huvudlogiken för ditt program.</li></ul><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pinMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, OUTPUT);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Ställ in ledPin som en utgång</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> loop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, HIGH);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Tänd LED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 // Vänta 1 sekund</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, LOW);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Släck LED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 // Vänta 1 sekund</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div><h3 id="digitalwrite-digitalread-analogwrite-analogread" tabindex="-1">digitalWrite(), digitalRead(), analogWrite(), analogRead() <a class="header-anchor" href="#digitalwrite-digitalread-analogwrite-analogread" aria-label="Permalink to &quot;digitalWrite(), digitalRead(), analogWrite(), analogRead()&quot;">​</a></h3><p>Dessa funktioner används för att läsa från och skriva till pins på Arduino-kortet.</p><ul><li><strong>digitalWrite(pin, värde)</strong> : Sätter ett digitalt pin till HIGH (5V) eller LOW (0V).</li><li><strong>digitalRead(pin)</strong> : Läser värdet (HIGH eller LOW) från ett digitalt pin.</li><li><strong>analogWrite(pin, värde)</strong> : Skriver ett analogt värde (PWM) till ett pin.</li><li><strong>analogRead(pin)</strong> : Läser ett analogt värde från ett pin.</li></ul><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sensorValue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> analogRead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A0);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Läs ett värde från den analoga pin A0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h2 id="delay-och-millis" tabindex="-1">delay() och millis() <a class="header-anchor" href="#delay-och-millis" aria-label="Permalink to &quot;delay() och millis()&quot;">​</a></h2><ul><li><strong>delay(ms)</strong> : Pausar programmet under en viss tid (millisekunder).</li><li><strong>millis()</strong> : Returnerar antalet millisekunder som gått sedan programmet startade.</li></ul><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Vänta i 1 sekund</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> millis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Spara aktuell tid</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h2 id="_4-exempelprojekt" tabindex="-1">4. Exempelprojekt <a class="header-anchor" href="#_4-exempelprojekt" aria-label="Permalink to &quot;4. Exempelprojekt&quot;">​</a></h2><h3 id="blinkande-led" tabindex="-1">Blinkande LED <a class="header-anchor" href="#blinkande-led" aria-label="Permalink to &quot;Blinkande LED&quot;">​</a></h3><p>Det klassiska &quot;<strong>Blink</strong>&quot;-exemplet är ett bra sätt att börja förstå Arduino.</p><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ledPin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // LED är kopplad till digital pin 13</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pinMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, OUTPUT);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Ställ in ledPin som utgång</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> loop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, HIGH);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Tänd LED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 // Vänta 1 sekund</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ledPin, LOW);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Släck LED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 // Vänta 1 sekund</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></div><h3 id="styrning-av-en-motor" tabindex="-1">Styrning av en motor <a class="header-anchor" href="#styrning-av-en-motor" aria-label="Permalink to &quot;Styrning av en motor&quot;">​</a></h3><p>Med en PWM-utgång kan du styra hastigheten på en motor.</p><div class="tip custom-block"><p class="custom-block-title">Exempel</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> motorPin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Motor är kopplad till digital pin 9</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pinMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(motorPin, OUTPUT);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Ställ in motorPin som utgång</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> loop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    analogWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(motorPin, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Kör motor på full fart</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 // Vänta 2 sekunder</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    analogWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(motorPin, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">127</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Kör motor på halv fart</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 // Vänta 2 sekunder</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    analogWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(motorPin, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Stanna motor</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 // Vänta 2 sekunder</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></div>`,52),t=[e];function p(r,h,k,d,o,g){return a(),i("div",null,t)}const u=s(l,[["render",p]]);export{E as __pageData,u as default};
