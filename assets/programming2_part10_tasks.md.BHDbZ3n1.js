/* empty css                                                                            */import{c as t,o as r,a1 as a}from"./chunks/framework.D-ox0VZ9.js";const e=a('<h1 id="uppgifter-abstrakta-klasser" tabindex="-1">Uppgifter - Abstrakta klasser <a class="header-anchor" href="#uppgifter-abstrakta-klasser" aria-label="Permalink to &quot;Uppgifter - Abstrakta klasser&quot;">​</a></h1><p>Uppgifterna nedan bygger på avsnittet om <a href="/programming/programming2/part10/">Del 10 - Python Abstrakta klasser</a>.</p><p>Uppgifterna är <span class="c">obligatoriska</span> och dessa kommer att hjälpa dig att förstärka din förståelse för <strong>abstrakta klasser</strong> genom praktiska tillämpningar.</p><h2 id="uppgift-1-skapa-en-enkel-abstrakt-klass" tabindex="-1">Uppgift 1: Skapa en enkel abstrakt klass <a class="header-anchor" href="#uppgift-1-skapa-en-enkel-abstrakt-klass" aria-label="Permalink to &quot;Uppgift 1: Skapa en enkel abstrakt klass&quot;">​</a></h2><p><span class="a">Mål</span>:<br> Lära sig att skapa abstrakta klasser och implementera abstrakta metoder i underklasser.</p><p><span class="a">Instruktioner</span>:</p><ul><li>Skapa en abstrakt klass <strong>Fordon</strong> (basklass eller superklass) som innehåller en abstrakt metod <em><strong>antal_hjul()</strong></em>.</li><li>Skapa två underklasser (subklasser) <strong>Bil</strong> och <strong>Cykel</strong> som ärver från <strong>Fordon</strong>.</li><li>Implementera metoden <em><strong>antal_hjul()</strong></em> i dessa underklasser så att de returnerar antalet hjul (4 för <strong>Bil</strong> och 2 för <strong>Cykel</strong>).</li><li>Skapa instanser/objekt av <strong>Bil</strong> och <strong>Cykel</strong> och anropa metoden <em><strong>antal_hjul()</strong></em>.</li></ul><h2 id="uppgift-2-flera-abstrakta-metoder" tabindex="-1">Uppgift 2: Flera abstrakta metoder <a class="header-anchor" href="#uppgift-2-flera-abstrakta-metoder" aria-label="Permalink to &quot;Uppgift 2: Flera abstrakta metoder&quot;">​</a></h2><p><span class="a">Mål</span>:<br> Förstå hur abstrakta klasser kan användas för att definiera gemensamma gränssnitt för olika typer av objekt (i detta fall olika geometriska former).</p><p><span class="a">Instruktioner</span>:</p><ul><li>Skapa en abstrakt klass <strong>Form</strong> med två abstrakta metoder: <em><strong>area()</strong></em> och <em><strong>omkrets()</strong></em>.</li><li>Skapa två underklasser (subklasser): <strong>Rektangel</strong> och <strong>Cirkel</strong>. <ul><li><strong>Rektangel</strong> ska ha två attribut (instansvariabler): <em><strong>längd</strong></em> och <em><strong>bredd</strong></em>.</li><li><strong>Cirkel</strong> ska ha ett attribut: radie.</li><li>Implementera både area() och omkrets() för varje form där den ena metoden ska <strong>returnera</strong> arean och den andra omkretsen.</li></ul></li><li>Be användaren att ange tal för Rektangelns längd och bredd.</li><li>Skapa en instans (ett objekt) av klassen <strong>Rektangel</strong>.</li><li>Be användaren att ange tal för Cirkelns radie.</li><li>Skapa en instans (ett objekt) av klassen <strong>Cirkel</strong>.</li><li>Anropa metoderna för att beräkna area och omkrets för båda formerna, Rektangel och Cirkel.</li></ul><p>Rektankgel:</p><ul><li>area = längd * bredd</li><li>omkrets = 2 * (längd + bredd)</li></ul><p>Cirkel:</p><ul><li>area = math.pi * (radie ** 2)</li><li>omkrets = 2 * math.pi * radie</li></ul><h2 id="uppgift-3-kombinera-abstrakta-klasser-och-arv" tabindex="-1">Uppgift 3: Kombinera abstrakta klasser och arv <a class="header-anchor" href="#uppgift-3-kombinera-abstrakta-klasser-och-arv" aria-label="Permalink to &quot;Uppgift 3: Kombinera abstrakta klasser och arv&quot;">​</a></h2><p><span class="a">Mål</span>:<br> Lära sig att hantera arv och overriding av metoder i kombination med abstrakta klasser.</p><p><span class="a">Instruktioner</span>:</p><ul><li>Skapa en abstrakt klass <strong>Djur</strong> med två abstrakta metoder: <em><strong>ljud()</strong></em> och <em><strong>miljo()</strong></em>.</li><li>Skapa två underklasser (subklasser) <strong>Fågel</strong> och <strong>Fisk</strong>: <ul><li><strong>Fågel</strong> ska implementera <em><strong>ljud()</strong></em> med &quot;<strong>Kvitter</strong>&quot; och <em><strong>miljo()</strong></em> med &quot;<strong>Land</strong>&quot;.</li><li><strong>Fisk</strong> ska implementera <em><strong>ljud()</strong></em> med &quot;<strong>Glurp</strong>&quot; och <em><strong>miljo()</strong></em> med &quot;<strong>Vatten</strong>&quot;.</li></ul></li><li>Skapa en ytterligare underklass (subklass) av <strong>Fågel</strong> som heter <strong>Papegoja</strong>, som override metoden <em><strong>ljud()</strong></em> och returnerar &quot;<strong>Pratar</strong>&quot;.</li><li>Skapa instanser/objekt av <strong>Fågel</strong>, <strong>Fisk</strong> och <strong>Papegoja</strong>, och</li><li>Anropa metoder för <strong>Fågel</strong>, <em><strong>ljud()</strong></em> och <em><strong>miljo()</strong></em>,</li><li>Anropa metoder för <strong>Fisk</strong>, <em><strong>ljud()</strong></em> och <em><strong>miljo()</strong></em>,</li><li>Anropa metoder för <strong>Papegoja</strong>, <em><strong>ljud()</strong></em> och <em><strong>miljo()</strong></em>.</li></ul><h2 id="uppgift-4-skapa-ett-bibliotekssystem" tabindex="-1">Uppgift 4: Skapa ett bibliotekssystem <a class="header-anchor" href="#uppgift-4-skapa-ett-bibliotekssystem" aria-label="Permalink to &quot;Uppgift 4: Skapa ett bibliotekssystem&quot;">​</a></h2><p><span class="a">Mål</span>:<br> Skapa en mer realistisk applikation med abstrakta klasser och metoder som representerar ett bibliotekssystem.</p><p><span class="a">Instruktioner</span>:</p><ul><li>Skapa en abstrakt klass <strong>Bok</strong> med följande abstrakta metoder: <em><strong>beskrivning()</strong></em> och <em><strong>lån()</strong></em>.</li><li>Skapa två underklasser (subklasser): <strong>Roman</strong> och <strong>Fackbok</strong>: <ul><li><strong>Roman</strong> ska returnera en <em><strong>beskrivning</strong></em> som innehåller <em><strong>titel</strong></em> och <em><strong>författare</strong></em>.</li><li><strong>Fackbok</strong> ska returnera en <strong>beskrivning</strong> som innehåller <em><strong>titel</strong></em> och <em><strong>ämne</strong></em>.</li></ul></li><li>Skapa en metod <strong>lån()</strong> för båda typerna av böcker som skriver ut ett meddelande när boken lånas.</li><li>Skapa några instanser/objekt av böcker och skriv ut deras <em><strong>beskrivningar</strong></em> och anropa deras <strong>lånemetoder</strong>.</li></ul><h2 id="uppgift-5-multilevel-inheritance-med-abstrakta-klasser" tabindex="-1">Uppgift 5: Multilevel inheritance med abstrakta klasser <a class="header-anchor" href="#uppgift-5-multilevel-inheritance-med-abstrakta-klasser" aria-label="Permalink to &quot;Uppgift 5: Multilevel inheritance med abstrakta klasser&quot;">​</a></h2><p><span class="a">Mål</span>:<br> Utforska arv i flera nivåer och kombinera det med abstrakta klasser.</p><p><span class="a">Instruktioner</span>:</p><ul><li>Skapa en abstrakt klass <strong>Instrument</strong> med en abstrakt metod <em><strong>spela()</strong></em>.</li><li>Skapa en underklass (subklass) <strong>Stränginstrument</strong> som ärver från <strong>Instrument</strong> och implementerar metoden <em><strong>spela()</strong></em> med följande text &quot;<strong>Stränginstrumentet spelar musik</strong>&quot;. Metodens text ska returneras. <ul><li>Lägg till en metod <em><strong>antal_strängar()</strong></em> i klassen <strong>Stränginstrument</strong> som returnerar <strong>antalet strängar</strong>.</li></ul></li><li>Skapa en underklass (subklass) <strong>Gitarr</strong> som ärver från klassen <strong>Stränginstrument</strong> och &quot;<strong>override</strong>&quot; <em><strong>spela()</strong></em> för att returnera &quot;<strong>Gitarren spelar musik</strong>&quot;.</li><li>Skapa en instans (ett objekt) av klassen <strong>Gitarr</strong> och anropa metoderna <em><strong>spela()</strong></em> och <em><strong>antal_strängar()</strong></em>.</li></ul>',27),s=[e],m=JSON.parse('{"title":"Uppgifter - Abstrakta klasser","description":"","frontmatter":{"outline":[1,6]},"headers":[],"relativePath":"programming2/part10/tasks.md","filePath":"programming2/part10/tasks.md"}'),n={name:"programming2/part10/tasks.md"},p=Object.assign(n,{setup(o){return(l,i)=>(r(),t("div",null,s))}});export{m as __pageData,p as default};
