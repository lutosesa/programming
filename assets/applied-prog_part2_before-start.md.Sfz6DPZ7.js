import{_ as r,c as t,o as a,a1 as n}from"./chunks/framework.gq8XtqsK.js";const p=JSON.parse('{"title":"Före start","description":"","frontmatter":{"outline":[1,6]},"headers":[],"relativePath":"applied-prog/part2/before-start.md","filePath":"applied-prog/part2/before-start.md"}'),e={name:"applied-prog/part2/before-start.md"},o=n('<h1 id="fore-start" tabindex="-1">Före start <a class="header-anchor" href="#fore-start" aria-label="Permalink to &quot;Före start&quot;">​</a></h1><h2 id="att-ansluta-arduino-ide-till-arduino-kortet" tabindex="-1">Att ansluta Arduino-IDE till Arduino-kortet <a class="header-anchor" href="#att-ansluta-arduino-ide-till-arduino-kortet" aria-label="Permalink to &quot;Att ansluta Arduino-IDE till Arduino-kortet&quot;">​</a></h2><p>Arduino IDE (Integrated Development Environment) är programvaran där du skriver och laddar upp koden till din Arduino. Här är några grundläggande steg för att komma igång:</p><ul><li>Välj ditt Arduino-kort: Under &quot;<strong>Tools</strong>&quot; -&gt; &quot;<strong>Board</strong>&quot; väljer du din Arduino-modell, t.ex. <strong>Arduino Uno</strong>.</li><li>Välj Port: Under &quot;<strong>Tools</strong>&quot; -&gt; &quot;<strong>Port</strong>&quot; väljer du den port där din Arduino är ansluten.</li><li>Skriv Kod: Här skriver du din kod, som vanligtvis består av två huvuddelar: <ul><li><em><strong>setup()</strong></em>: Körs en gång när programmet startar.</li><li><em><strong>loop()</strong></em>: Körs om och om igen så länge Arduinon är påslagen.</li></ul></li></ul><h2 id="ej-ansluten-till-arduino-enhet" tabindex="-1">Ej ansluten till arduino-enhet <a class="header-anchor" href="#ej-ansluten-till-arduino-enhet" aria-label="Permalink to &quot;Ej ansluten till arduino-enhet&quot;">​</a></h2><p>Ja, det är möjligt att använda Arduino IDE utan att välja en specifik port eller vara ansluten till en fysisk Arduino-enhet.</p><h3 id="_1-undervisning-och-larande" tabindex="-1">1. Undervisning och lärande <a class="header-anchor" href="#_1-undervisning-och-larande" aria-label="Permalink to &quot;1. Undervisning och lärande&quot;">​</a></h3><p>Du kommer att lära dig grunderna i programmering, syntax, och struktur för Arduino-program (sketches) innan du börjar arbeta med de faktiska komponenterna.</p><h3 id="_2-anvandning-av-simuleringsverktyg" tabindex="-1">2. Användning av simuleringsverktyg <a class="header-anchor" href="#_2-anvandning-av-simuleringsverktyg" aria-label="Permalink to &quot;2. Användning av simuleringsverktyg&quot;">​</a></h3><p>Det finns även mjukvaror och onlineverktyg som låter dig simulera Arduino-projekt. Med dessa verktyg kan du skriva och testa din Arduino-kod utan att behöva en fysisk enhet. Ett exempel på ett sådant verktyg är <strong>Tinkercad</strong>, som har en <strong>inbyggd Arduino-simulator</strong>.</p><h3 id="_3-skriva-och-testa-kod-utan-hardvara" tabindex="-1">3. Skriva och testa kod utan hårdvara <a class="header-anchor" href="#_3-skriva-och-testa-kod-utan-hardvara" aria-label="Permalink to &quot;3. Skriva och testa kod utan hårdvara&quot;">​</a></h3><p>Du kan skriva och kompilera (testa) din kod i Arduino IDE utan att ha en Arduino ansluten. När du klickar på knappen &quot;<em><strong>Verify</strong></em>&quot; (eller &quot;<strong>Checkmark</strong>&quot;-ikonen) i Arduino IDE, kommer IDE att kontrollera din kod för syntaxfel och meddela dig om eventuella problem. Detta är användbart om du vill förbereda och testa din kod innan du har tillgång till en Arduino-enhet.</p>',12),i=[o];function d(l,s,u,g,h,k){return a(),t("div",null,i)}const v=r(e,[["render",d]]);export{p as __pageData,v as default};
