import{c as e,j as a,I as s,a1 as n,a as t,o as i,aR as r}from"./chunks/framework.CHpxEiNO.js";import{I as l}from"./chunks/IframeToggle.BCOkkNoY.js";/* empty css                                                                            */const k=n('<h1 id="hur-fungerar-python" tabindex="-1">Hur fungerar Python? <a class="header-anchor" href="#hur-fungerar-python" aria-label="Permalink to &quot;Hur fungerar Python?&quot;">​</a></h1><p>Python är ett <strong>tolkat</strong>, högnivå och dynamiskt typat programmeringsspråk som används för en mängd olika applikationer. För att förstå hur Python fungerar, är det viktigt att titta på några grundläggande koncept och komponenter.</p><p><img src="'+r+'" alt=""></p><h2 id="grundlaggande-koncept-och-komponenter" tabindex="-1">Grundläggande koncept och komponenter <a class="header-anchor" href="#grundlaggande-koncept-och-komponenter" aria-label="Permalink to &quot;Grundläggande koncept och komponenter&quot;">​</a></h2><h3 id="_1-tolkat-sprak" tabindex="-1">1. Tolkat språk <a class="header-anchor" href="#_1-tolkat-sprak" aria-label="Permalink to &quot;1. Tolkat språk&quot;">​</a></h3><p>Python är ett tolkat språk, vilket innebär att koden exekveras rad för rad av en tolk (interpreter) snarare än att kompileras till maskinkod innan den körs. Detta gör utvecklingsprocessen snabbare och enklare eftersom man kan testa och köra kod direkt utan att behöva gå igenom en kompileringsprocess.</p><h3 id="_2-dynamisk-typning" tabindex="-1">2. Dynamisk typning <a class="header-anchor" href="#_2-dynamisk-typning" aria-label="Permalink to &quot;2. Dynamisk typning&quot;">​</a></h3><p>Python använder dynamisk typning, vilket innebär att datatyper för variabler bestäms automatiskt vid exekveringstid och inte behöver deklareras i förväg. Detta gör det möjligt att skriva mer flexibel och kortare kod.</p><h3 id="_3-hog-niva-av-abstraktion" tabindex="-1">3. Hög nivå av abstraktion <a class="header-anchor" href="#_3-hog-niva-av-abstraktion" aria-label="Permalink to &quot;3. Hög nivå av abstraktion&quot;">​</a></h3><p>Python är ett högnivåspråk, vilket innebär att det erbjuder en hög grad av abstraktion från hårdvaran. Detta gör det enklare att skriva kod utan att behöva hantera låg-nivå detaljer som minneshantering.</p><h3 id="_4-standardbiblioteket" tabindex="-1">4. Standardbiblioteket <a class="header-anchor" href="#_4-standardbiblioteket" aria-label="Permalink to &quot;4. Standardbiblioteket&quot;">​</a></h3><p>Python kommer med ett omfattande standardbibliotek som inkluderar moduler för att hantera filer, nätverksprotokoll, databasanslutningar, matematiska beräkningar och mycket mer. Detta gör det möjligt att snabbt och enkelt bygga komplexa applikationer utan att behöva skriva all kod från grunden.</p><h3 id="_5-indentering-for-blockstruktur" tabindex="-1">5. Indentering för blockstruktur <a class="header-anchor" href="#_5-indentering-for-blockstruktur" aria-label="Permalink to &quot;5. Indentering för blockstruktur&quot;">​</a></h3><p>Till skillnad från många andra språk som använder måsvingar ({}) för att definiera kodblock, använder Python indentering. Detta bidrar till kodens läsbarhet och tvingar utvecklare att skriva välstrukturerad kod.</p><h3 id="_6-interaktivt-skal-repl" tabindex="-1">6. Interaktivt skal (REPL) <a class="header-anchor" href="#_6-interaktivt-skal-repl" aria-label="Permalink to &quot;6. Interaktivt skal (REPL)&quot;">​</a></h3><p>Python har ett interaktivt skal, även känt som REPL (Read-Eval-Print Loop), som låter utvecklare skriva och exekvera kod i realtid. Detta är användbart för att testa och debugga kodsnuttar snabbt.</p><h2 id="hur-python-exekverar-kod" tabindex="-1">Hur Python Exekverar Kod <a class="header-anchor" href="#hur-python-exekverar-kod" aria-label="Permalink to &quot;Hur Python Exekverar Kod&quot;">​</a></h2><h3 id="kallkod" tabindex="-1">Källkod <a class="header-anchor" href="#kallkod" aria-label="Permalink to &quot;Källkod&quot;">​</a></h3><p>Du skriver Python-kod i en <em><strong>.py</strong></em>-fil eller direkt i det interaktiva skalet.</p><h3 id="tolkning" tabindex="-1">Tolkning <a class="header-anchor" href="#tolkning" aria-label="Permalink to &quot;Tolkning&quot;">​</a></h3><p>När du kör en Python-fil eller en kodsnutt, läser tolken koden rad för rad.</p><h3 id="bytekod" tabindex="-1">Bytekod <a class="header-anchor" href="#bytekod" aria-label="Permalink to &quot;Bytekod&quot;">​</a></h3><p>Python-koden kompileras till bytekod, en mellanrepresentation, som lagras i .pyc-filer. Detta steg är osynligt för användaren och sker automatiskt.</p><h3 id="exekvering" tabindex="-1">Exekvering <a class="header-anchor" href="#exekvering" aria-label="Permalink to &quot;Exekvering&quot;">​</a></h3><p>Python-tolken (t.ex., CPython, den mest använda implementationen av Python) exekverar bytekoden i en virtuell maskin.</p><h2 id="exempel-pa-python-kod" tabindex="-1">Exempel på Python-kod <a class="header-anchor" href="#exempel-pa-python-kod" aria-label="Permalink to &quot;Exempel på Python-kod&quot;">​</a></h2>',26),o={class:"tip custom-block"},h=n(`<p class="custom-block-title">Låt oss titta på ett enkelt exempel som illustrerar några grundläggande koncept i Python:</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Skapar en variabel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt; Ange ditt namn &gt; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Skapar en funktion</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> welcome</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hej, Välkommen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> till Programmering 1!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Anropa funktionen</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">welcome(name)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Använda en loop</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Hantera en lista</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">games </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Minecraft&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Super Mario&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Mario kart&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> game </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> games:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(game)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><strong>Förklaringar</strong></p><ul><li><strong>Variabler</strong>: en variabel skapas med namnet &#39;<strong>name</strong>&#39; och tilldelaa ett värde &#39;<em><strong>Erik</strong></em>&#39;.</li><li><strong>Funktioner</strong>: Definieras med <em><strong>def</strong></em>-nyckelordet. I detta fall skapas en funktion &#39;<strong>welcome</strong>&#39; som tar ett argument &#39;<strong>name</strong>&#39; och skriver ut en hälsning.</li><li><strong>Loopar</strong>: for-loopen används för att iterera över en sekvens. <em><strong>range(5)</strong></em> genererar en sekvens av tal från 0 till 4.</li><li><strong>Listor</strong>: En lista skapas med hakparenteser och kan innehålla flera element. Vi itererar över listan &#39;<strong>games</strong>&#39; och skriver ut varje game.</li></ul>`,4),p=a("h2",{id:"sammanfattning",tabindex:"-1"},[t("Sammanfattning "),a("a",{class:"header-anchor",href:"#sammanfattning","aria-label":'Permalink to "Sammanfattning"'},"​")],-1),d=a("p",null,"Python fungerar genom att tolka koden rad för rad, vilket gör utvecklingsprocessen snabb och flexibel. Dess dynamiska typning, hög nivå av abstraktion, och omfattande standardbibliotek gör det till ett kraftfullt verktyg för en mängd olika applikationer. Indentering används för att definiera kodblock, vilket bidrar till en ren och lättläst kodstruktur. Python's interaktiva skal och stöd för snabb exekvering gör det enkelt att experimentera och iterera över kod.",-1),v=JSON.parse('{"title":"Hur fungerar Python?","description":"","frontmatter":{"outline":[1,6]},"headers":[],"relativePath":"programming1/part2/how-does-python-work.md","filePath":"programming1/part2/how-does-python-work.md"}'),g={name:"programming1/part2/how-does-python-work.md"},f=Object.assign(g,{setup(m){return(c,u)=>(i(),e("div",null,[k,a("div",o,[h,s(l)]),p,d]))}});export{v as __pageData,f as default};
