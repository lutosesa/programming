import{_ as a,c as i,o as e,a1 as r}from"./chunks/framework.CHpxEiNO.js";const m=JSON.parse('{"title":"Arduino IDE","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"applied-prog/part2/arduino-IDE.md","filePath":"applied-prog/part2/arduino-IDE.md"}'),n={name:"applied-prog/part2/arduino-IDE.md"},s=r(`<h1 id="arduino-ide" tabindex="-1">Arduino IDE <a class="header-anchor" href="#arduino-ide" aria-label="Permalink to &quot;Arduino IDE&quot;">​</a></h1><p>Arduino IDE (Integrated Development Environment) är den officiella mjukvaran som används för att skriva, redigera, och ladda upp program (även kallade &quot;skisser&quot;) till Arduino-mikrokontrollerkort. Denna miljö gör det möjligt för användare, både nybörjare och avancerade, att enkelt programmera sina Arduino-projekt.</p><h2 id="huvudfunktioner-i-arduino-ide" tabindex="-1">Huvudfunktioner i Arduino IDE <a class="header-anchor" href="#huvudfunktioner-i-arduino-ide" aria-label="Permalink to &quot;Huvudfunktioner i Arduino IDE&quot;">​</a></h2><h3 id="_1-kodredigerare" tabindex="-1">1. Kodredigerare: <a class="header-anchor" href="#_1-kodredigerare" aria-label="Permalink to &quot;1. Kodredigerare:&quot;">​</a></h3><p>Arduino IDE har en textredigerare där du kan skriva och redigera din kod. Redigeraren är enkel och har grundläggande funktioner som syntaxmarkering (färgkodning av nyckelord) och automatisk komplettering av kod.</p><h3 id="_2-kompilator" tabindex="-1">2. Kompilator <a class="header-anchor" href="#_2-kompilator" aria-label="Permalink to &quot;2. Kompilator&quot;">​</a></h3><p>När du har skrivit din kod, kan du kompilera den genom att klicka på en knapp i gränssnittet. Kompilatorn översätter din kod till maskinspråk som mikrokontrollern på Arduino-kortet kan förstå.</p><h3 id="_3-ladda-upp-till-kortet" tabindex="-1">3. Ladda upp till kortet <a class="header-anchor" href="#_3-ladda-upp-till-kortet" aria-label="Permalink to &quot;3. Ladda upp till kortet&quot;">​</a></h3><p>Efter att koden har kompilerats framgångsrikt, kan du ladda upp den till ditt Arduino-kort via en USB-kabel. När koden är uppladdad, kommer kortet att utföra de instruktioner som din kod specificerar.</p><h3 id="_4-serieovervakare-serial-monitor" tabindex="-1">4. Serieövervakare (Serial Monitor) <a class="header-anchor" href="#_4-serieovervakare-serial-monitor" aria-label="Permalink to &quot;4. Serieövervakare (Serial Monitor)&quot;">​</a></h3><p>Arduino IDE har ett inbyggt verktyg som kallas Serieövervakare, vilket gör det möjligt för dig att kommunicera med ditt Arduino-kort i realtid via en seriell port. Detta är särskilt användbart för att debugga och få feedback från sensorer eller andra komponenter som är anslutna till kortet.</p><h3 id="_5-bibliotekshantering" tabindex="-1">5. Bibliotekshantering <a class="header-anchor" href="#_5-bibliotekshantering" aria-label="Permalink to &quot;5. Bibliotekshantering&quot;">​</a></h3><p>Arduino IDE kommer med en rad inbyggda bibliotek som gör det enkelt att använda olika sensorer, displayer och andra komponenter. Du kan också ladda ner och lägga till externa bibliotek för att utöka funktionaliteten i dina projekt.</p><h3 id="_6-plattformsmangfald" tabindex="-1">6. Plattformsmångfald <a class="header-anchor" href="#_6-plattformsmangfald" aria-label="Permalink to &quot;6. Plattformsmångfald&quot;">​</a></h3><p>Arduino IDE stöder flera typer av Arduino-kort, från den vanliga Arduino Uno till mer avancerade kort som Arduino Mega, Arduino Nano, och Arduino Leonardo. Det finns även stöd för tredje parts mikrokontrollerkort.</p><h3 id="_7-cross-platform-support" tabindex="-1">7. Cross-platform support <a class="header-anchor" href="#_7-cross-platform-support" aria-label="Permalink to &quot;7. Cross-platform support&quot;">​</a></h3><p>Arduino IDE är tillgängligt för flera operativsystem, inklusive Windows, macOS och Linux, vilket gör det tillgängligt för en bred användarbas.</p><h3 id="_8-oppen-kallkod" tabindex="-1">8. Öppen källkod <a class="header-anchor" href="#_8-oppen-kallkod" aria-label="Permalink to &quot;8. Öppen källkod&quot;">​</a></h3><p>Arduino IDE är öppen källkod, vilket betyder att källkoden är tillgänglig för alla att granska, modifiera och förbättra. Detta har lett till en stor och aktiv community som bidrar med nya funktioner och förbättringar.</p><h2 id="sa-har-anvander-du-arduino-ide" tabindex="-1">Så här använder du Arduino IDE: <a class="header-anchor" href="#sa-har-anvander-du-arduino-ide" aria-label="Permalink to &quot;Så här använder du Arduino IDE:&quot;">​</a></h2><h3 id="_1-installation" tabindex="-1">1. Installation <a class="header-anchor" href="#_1-installation" aria-label="Permalink to &quot;1. Installation&quot;">​</a></h3><p>Du börjar med att ladda ner och installera Arduino IDE från den officiella Arduino-webbplatsen.</p><h3 id="_2-anslut-ditt-arduino-kort" tabindex="-1">2. Anslut ditt Arduino-kort <a class="header-anchor" href="#_2-anslut-ditt-arduino-kort" aria-label="Permalink to &quot;2. Anslut ditt Arduino-kort&quot;">​</a></h3><p>Anslut ditt Arduino-kort till datorn med en USB-kabel.</p><h3 id="_3-skriv-din-skiss" tabindex="-1">3. Skriv din skiss <a class="header-anchor" href="#_3-skriv-din-skiss" aria-label="Permalink to &quot;3. Skriv din skiss&quot;">​</a></h3><p>Öppna Arduino IDE och skriv din skiss (kod) i redigeraren. Du kan använda grundläggande C/C++-syntax, och IDE tillhandahåller många inbyggda funktioner och bibliotek för att göra kodskrivningen enklare.</p><h3 id="_4-kompilera-och-ladda-upp" tabindex="-1">4. Kompilera och ladda upp <a class="header-anchor" href="#_4-kompilera-och-ladda-upp" aria-label="Permalink to &quot;4. Kompilera och ladda upp&quot;">​</a></h3><p>När du är nöjd med din kod, klicka på kompilera-knappen för att kontrollera om det finns några fel. Om allt är korrekt, ladda upp koden till ditt Arduino-kort genom att klicka på &quot;Upload&quot;-knappen.</p><h3 id="_5-overvaka-och-justera" tabindex="-1">5. Övervaka och justera <a class="header-anchor" href="#_5-overvaka-och-justera" aria-label="Permalink to &quot;5. Övervaka och justera&quot;">​</a></h3><p>Använd Serieövervakaren för att övervaka utdata från ditt projekt och göra justeringar i koden vid behov.</p><h2 id="exempel-pa-en-enkel-skiss-i-arduino-ide" tabindex="-1">Exempel på en enkel skiss i Arduino IDE: <a class="header-anchor" href="#exempel-pa-en-enkel-skiss-i-arduino-ide" aria-label="Permalink to &quot;Exempel på en enkel skiss i Arduino IDE:&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  pinMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, OUTPUT);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Ställer in pin 13 som en utgång</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> loop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, HIGH);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Sätter pin 13 hög (slår på LED)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Väntar i 1 sekund</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, LOW);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Sätter pin 13 låg (slår av LED)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Väntar i 1 sekund</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,32),t=[s];function l(o,d,k,p,h,u){return e(),i("div",null,t)}const g=a(n,[["render",l]]);export{m as __pageData,g as default};
