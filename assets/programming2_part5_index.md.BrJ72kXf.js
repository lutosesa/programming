import{c as t,j as s,I as n,a1 as i,a,o as l,d0 as r}from"./chunks/framework.BFCrY6Vf.js";import{I as e}from"./chunks/IframeToggle.DTxoDr6D.js";/* empty css                                                                            */const p=i('<h1 id="klasser-och-objekt" tabindex="-1">Klasser och objekt <a class="header-anchor" href="#klasser-och-objekt" aria-label="Permalink to &quot;Klasser och objekt&quot;">​</a></h1><p>En viktig del av Python är dess stöd för objektorienterad programmering (OOP). <strong>OOP</strong> är ett sätt att strukturera din kod genom att skapa &quot;<strong>objekt</strong>&quot;, som är som små program i programmet. Dessa objekt är skapade av &quot;<strong>klasser</strong>&quot;.<br> I denna handledning ska vi gå igenom:</p><ul><li>grunderna i klasser och objekt i Python,</li><li>förklara hur de fungerar,</li><li>varför de är användbara, och</li><li>hur du kan använda dem i dina egna projekt.</li></ul><p><img src="'+r+`" alt=""></p><h2 id="_1-vad-ar-en-klass" tabindex="-1">1. Vad är en klass? <a class="header-anchor" href="#_1-vad-ar-en-klass" aria-label="Permalink to &quot;1. Vad är en klass?&quot;">​</a></h2><p>En klass kan ses som en <strong>mall</strong> eller en <strong>ritning</strong> för att skapa objekt. Den definierar vilka attribut (egenskaper) och metoder (funktioner) som objekten ska ha. Tänk på en klass som en ritning för en bil. Ritningen specificerar hur bilen ska se ut, men själva bilen (som är objektet) existerar inte förrän du bygger det.</p><h3 id="definition" tabindex="-1">Definition: <a class="header-anchor" href="#definition" aria-label="Permalink to &quot;Definition:&quot;">​</a></h3><p>En klass i Python definieras med nyckelordet <span class="b">class</span>, följt av <strong>klassens namn</strong> och ett <strong>kolon</strong>. Namnet på klassen börjar ofta med en <strong>stor bokstav</strong>.</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    pass</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Här har vi skapat en enkel klass som heter Car. I det här exemplet gör klassen ingenting eftersom vi använder <em><strong>pass</strong></em> som betyder att vi inte definierar något i klassen än.</p><h2 id="_2-vad-ar-ett-objekt" tabindex="-1">2. Vad är ett objekt? <a class="header-anchor" href="#_2-vad-ar-ett-objekt" aria-label="Permalink to &quot;2. Vad är ett objekt?&quot;">​</a></h2><p>Ett objekt är en <strong>instans</strong> av en klass. Det är vad som skapas när du använder en klass för att skapa något specifikt. Om klassen är ritningen för en bil, är objektet den faktiska bilen som byggs.</p><p>Definition: Ett objekt skapas genom att anropa på klassens namn, som om det vore en funktion.</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_car </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Car()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Här har vi skapat ett objekt som heter <em><strong>my_car</strong></em> från klassen <em><strong>Car</strong></em>. <em><strong>my_car</strong></em> är nu en <strong>instans</strong> av klassen <strong>Car</strong>, vilket innebär att det är ett konkret exempel på vad en bil kan vara.</p><h2 id="_3-varfor-anvanda-klasser-och-objekt" tabindex="-1">3. Varför använda klasser och objekt? <a class="header-anchor" href="#_3-varfor-anvanda-klasser-och-objekt" aria-label="Permalink to &quot;3. Varför använda klasser och objekt?&quot;">​</a></h2><p>Klasser och objekt hjälper till att <strong>strukturera</strong> koden bättre genom att <strong>gruppera relaterade funktioner</strong> och <strong>data</strong> i en och samma enhet. Det gör koden mer <strong>organiserad</strong>, lättare att underhålla och återanvändbar.</p><h3 id="fordelar-med-klasser-och-objekt" tabindex="-1">Fördelar med klasser och objekt: <a class="header-anchor" href="#fordelar-med-klasser-och-objekt" aria-label="Permalink to &quot;Fördelar med klasser och objekt:&quot;">​</a></h3><ul><li><strong>Organisation</strong>: Kod kan grupperas på ett logiskt sätt.</li><li><strong>Återanvändbarhet</strong>: Kod kan återanvändas enkelt genom att skapa flera objekt från samma klass.</li><li><strong>Modularitet</strong>: Det är lättare att felsöka och förstå mindre bitar av kod än en stor röra av funktioner och variabler.</li></ul><h2 id="_4-skapa-en-klass" tabindex="-1">4. Skapa en klass <a class="header-anchor" href="#_4-skapa-en-klass" aria-label="Permalink to &quot;4. Skapa en klass&quot;">​</a></h2><p>Låt oss skapa en enkel klass som representerar en bil. Denna klass kommer att ha attribut som beskriver bilens märke, modell och färg.</p>`,21),h={class:"tip custom-block"},k=i(`<p class="custom-block-title">Exempel:</p><ul><li>Skapa en Python-fil som heter <em>Test_classes.py</em>,</li><li>kopiera klassen <em>Car</em> nedan och</li><li>klista in i Python-filen <em>Test_classes.py</em></li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, brand, model, color):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.brand </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> brand</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> model</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Förklaring:</p><ul><li><em><strong>__init__()</strong></em>: Detta är en speciell metod som kallas konstruktör. Den används för att initiera objektets attribut när ett objekt skapas. I detta exempel initierar vi bilens märke, modell och färg.</li><li><em><strong>self</strong></em>: Detta är en referens till det aktuella objektet. När du skapar ett objekt från klassen, används <em><strong>self</strong></em> för att komma åt variabler som är kopplade till det specifika objektet.</li></ul>`,5),o=s("h2",{id:"_5-skapa-ett-objekt",tabindex:"-1"},[a("5. Skapa ett objekt "),s("a",{class:"header-anchor",href:"#_5-skapa-ett-objekt","aria-label":'Permalink to "5. Skapa ett objekt"'},"​")],-1),d=s("p",null,"Nu när vi har skapat en klass kan vi skapa ett objekt från den.",-1),g={class:"tip custom-block"},c=i(`<p class="custom-block-title">Exempel:</p><ul><li>Skapa en Python-fil som heter <em>main.py</em>,</li><li>kopiera koden nedan och</li><li>klista in i Python-filen <em>main.py</em>.</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Test_classes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Car</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_car </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Car(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Volvo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;XC40&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Grön&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Märke:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, my_car.brand)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Modell:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, my_car.model)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Färg:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, my_car.color)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Förklaring:</p><ul><li><strong>Rad 1</strong>: Vi börjar med att importera klassen &#39;<em>Car</em>&#39; från filen &#39;<em>Test_classes</em>&#39;.</li><li><strong>Rad 3</strong>: Nu kan vi skapa en instans, ett objekt <em><strong>my_car</strong></em>, av typen <em>Car</em>. Vid skapandet sätts/tilldelas de tre <strong>instansvariablerna</strong> &#39;<em>brand</em>&#39;, &#39;<em>model</em>&#39; och &#39;<em>color</em>&#39; värden &quot;<strong>Volvo</strong>&quot;, &quot;<strong>XC40</strong>&quot; och &quot;<strong>Grön</strong>&quot;.</li><li><strong>Rad 5-6-7</strong>: Nu kan vi komma åt dessa variabler med kommandot <em><strong>objektnamn.instansnamn</strong></em> och skriva ut dessa värden.</li></ul><p>Ja, här har vi skapat ett objekt <em><strong>my_car</strong></em> med attributen märke (brand) som &quot;<strong>Volvo</strong>&quot;, modell (model) som &quot;<strong>XC40</strong>&quot; och färg (color) som &quot;<strong>Röd</strong>&quot;.</p>`,6),m=s("h2",{id:"_6-anvandning-av-metoder-i-en-klass",tabindex:"-1"},[a("6. Användning av metoder i en klass "),s("a",{class:"header-anchor",href:"#_6-anvandning-av-metoder-i-en-klass","aria-label":'Permalink to "6. Användning av metoder i en klass"'},"​")],-1),E=s("p",null,"Metoder är funktioner som är definierade inuti en klass och som kan användas för att interagera med objektets data.",-1),b={class:"tip custom-block"},u=i(`<p class="custom-block-title">Exempel: skapa en funktion i klassen <em><strong>Car</strong></em>, filen <em>Test_classes.py</em></p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, brand, model, color):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.brand </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> brand</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> model</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.brand</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bilen startar!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Förklaring:<br> Här har vi lagt till en metod <em><strong>start()</strong></em> som när den anropas, kommer att skriva ut ett meddelande om att bilen startar.</p><h4 id="testa-metoden-start" tabindex="-1">Testa metoden <em>start()</em> <a class="header-anchor" href="#testa-metoden-start" aria-label="Permalink to &quot;Testa metoden *start()*&quot;">​</a></h4><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Test_classes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Car</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_car </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Car(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Kia&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Niro&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Röd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_car.start()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Förklaring:<br> Här har vi lagt till en metod <em><strong>start()</strong></em> som när den anropas, kommer att skriva ut ett meddelande om att bilen startar.</p>`,6),y=s("h2",{id:"_7-attribut-och-deras-anvandning",tabindex:"-1"},[a("7. Attribut och deras användning "),s("a",{class:"header-anchor",href:"#_7-attribut-och-deras-anvandning","aria-label":'Permalink to "7. Attribut och deras användning"'},"​")],-1),_=s("p",null,[a("Attribut är variabler som är kopplade till ett objekt. De definieras i   "),s("em",null,[s("strong",null,"__init__()")]),a(" metoden och kan nås och ändras när som helst.")],-1),F={class:"tip custom-block"},v=i(`<p class="custom-block-title">Exempel</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Test_classes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Car</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_car </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Car(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Tesla&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Blå&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_car.brand, my_car.model, car_tesla.color)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_car.color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Vit&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_car.brand, my_car.model, car_tesla.color)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Här har vi ändrat <em>color</em>-attributet på <em>car_tesla</em> till &quot;Vit&quot; och sedan skrivit ut det.</p>`,3),C=i(`<h2 id="_8-init-metoden" tabindex="-1">8. <em>__init__()</em>-metoden <a class="header-anchor" href="#_8-init-metoden" aria-label="Permalink to &quot;8. *\\_\\_init__()*-metoden&quot;">​</a></h2><p>Som nämnts tidigare är <span class="b">__init__()</span> en speciell metod (funktion) som anropas automatiskt när ett nytt objekt skapas (anropas\\körs endast en enda gång). Den kallas också klassens konstruktor och returnerar en instans av klassen. Den används för att sätta initiala värden på objektets attribut.</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, brand, model, color):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.brand </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> brand</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> model</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Det är viktigt att komma ihåg att denna metod <strong>alltid</strong> ska ha <span class="b">self</span> som första parameter.</p><h2 id="_9-str-metoden" tabindex="-1">9. <em>__str__()</em>-metoden <a class="header-anchor" href="#_9-str-metoden" aria-label="Permalink to &quot;9. *\\_\\_str__()*-metoden&quot;">​</a></h2><p>Funktionen <span class="b">__str__()</span> är en speciell metod i Python som används för att definiera en anpassad strängrepresentation av ett objekt. När du definierar <span class="b">__str__()</span> i din klass, kan du bestämma hur objektet ska visas när du skriver ut det med funktionen <em>print()</em>.</p><h3 id="varfor-str" tabindex="-1">Varför <em>__str__()</em>? <a class="header-anchor" href="#varfor-str" aria-label="Permalink to &quot;Varför  *\\_\\_str__()*?&quot;">​</a></h3><p>Standardsträngrepresentationen av ett objekt är ofta inte särskilt användbar eller läsbar. Om du till exempel skapar ett objekt av en klass utan att definiera <span class="b">__str__()</span> , och sedan försöker skriva ut det, kommer Python att visa något i stil med:</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Test_classes.Car </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> at </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7ff92b5d3c10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,9),f={class:"tip custom-block"},B=i(`<p class="custom-block-title">Exempel</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Test_classes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Car</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_car </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Car(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Tesla&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Blå&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># utskrift:  &lt;Test_classes.Car object at 0x7ff92b5d3c10&gt;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_car)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Utkriften som man får ovan är en standardrepresentation som anger objektets <strong>minnesadress</strong>, men det ger dig ingen information om själva objektet.</p>`,3),A=s("p",null,[a("Med "),s("span",{class:"b"},"__str__()"),a(" kan du göra strängrepresentationen mer informativ och användbar.")],-1),q=s("h3",{id:"hur-fungerar-str",tabindex:"-1"},[a("Hur fungerar "),s("strong",null,"str"),a("()? "),s("a",{class:"header-anchor",href:"#hur-fungerar-str","aria-label":'Permalink to "Hur fungerar __str__()?"'},"​")],-1),D=s("p",null,[a("Låt oss se hur vi kan använda "),s("span",{class:"b"},"__str__()"),a(" i en klass.")],-1),T={class:"tip custom-block"},j=i(`<p class="custom-block-title">Exempel</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Car</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, brand, model, color):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.brand </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> brand</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> model</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __str__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bil: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.brand</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Model: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.model</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Färg: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.color</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_car </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Car(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Tesla&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Blå&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_car)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>Förklaring</strong>:</p><ul><li><span class="b">__str__()</span><strong>-metoden</strong>: Här definierar vi en sträng som beskriver objektet. Vi använder en f-sträng (formaterad sträng) för att skapa en meningsfull beskrivning av bilens märke, modell och färg.</li><li><em><strong>print(car)</strong></em>: När vi skriver ut det skapade objektet &#39;<em><strong>my_car</strong></em>&#39; kommer Python automatiskt att anropa <span class="b">__str__()</span> och visa den sträng som returneras av denna metod</li></ul><p>Detta är mycket mer användbart och läsbart än standardsträngrepresentationen.</p>`,5),x=s("h2",{id:"_10-exempel",tabindex:"-1"},[a("10. Exempel "),s("a",{class:"header-anchor",href:"#_10-exempel","aria-label":'Permalink to "10. Exempel"'},"​")],-1),P=s("p",null,"Låt oss skapa en lite mer komplex klass som representerar en rektangel och kan beräkna dess area.",-1),S={class:"tip custom-block"},V=i(`<p class="custom-block-title">Exempel:</p><ul><li>Skapa en Python-fil som heter <em>rectangle.py</em>,</li><li>kopiera och klista in koden nedan i den skapdade filen <em>rectangle.py</em></li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, width, height):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> width</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> height</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> calculate_area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.height</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_rectangle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rectangle(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Arean av rektangeln är: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_rectangle.calculate_area()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Förklaring:<br> I detta exempel har vi skapat en klass <em>Rectangle</em> med två attribut <em>width</em> och <em>height</em>. Vi har också en metod <em>calculate_area</em> som returnerar rektangelns area.</p>`,4),I=s("h2",{id:"slutsats",tabindex:"-1"},[a("Slutsats "),s("a",{class:"header-anchor",href:"#slutsats","aria-label":'Permalink to "Slutsats"'},"​")],-1),N=s("p",null,"Klasser och objekt är grundläggande byggstenar i objektorienterad programmering i Python. Genom att använda klasser kan du strukturera din kod på ett mer logiskt och modulärt sätt. Detta gör det lättare att bygga, underhålla och förstå program. Vi har gått igenom grunderna i hur man skapar och använder klasser och objekt.",-1),R=s("p",null,"Med denna kunskap har du nu en solid grund för att fortsätta utforska och använda OOP i dina egna projekt!",-1),X=JSON.parse('{"title":"Klasser och objekt","description":"","frontmatter":{"outline":[1,6]},"headers":[],"relativePath":"programming2/part5/index.md","filePath":"programming2/part5/index.md"}'),w={name:"programming2/part5/index.md"},Y=Object.assign(w,{setup(O){return(H,K)=>(l(),t("div",null,[p,s("div",h,[k,n(e)]),o,d,s("div",g,[c,n(e)]),m,E,s("div",b,[u,n(e)]),y,_,s("div",F,[v,n(e)]),C,s("div",f,[B,n(e)]),A,q,D,s("div",T,[j,n(e)]),x,P,s("div",S,[V,n(e)]),I,N,R]))}});export{X as __pageData,Y as default};
