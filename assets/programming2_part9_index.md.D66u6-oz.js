import{I as a}from"./chunks/IframeToggle.dfjzTnZf.js";import{c as n,I as i,a1 as s,o as e}from"./chunks/framework.hKCETuSf.js";/* empty css                                                                            */const r=s(`<h1 id="overlagring-och-overskuggning" tabindex="-1">Överlagring och Överskuggning <a class="header-anchor" href="#overlagring-och-overskuggning" aria-label="Permalink to &quot;Överlagring och Överskuggning&quot;">​</a></h1><p>Två viktiga begrepp inom programmering är <strong>överlagring</strong> (<strong>overloading</strong>) och <strong>överskuggning</strong> (<strong>overriding</strong>), som kan hjälpa dig att skriva mer effektiv och flexibel kod.<br> Denna handledning riktar sig till dig som vill förstå hur dessa begrepp fungerar i Python.</p><h2 id="_1-vad-ar-overlagring-overloading" tabindex="-1">1. Vad är Överlagring (Overloading)? <a class="header-anchor" href="#_1-vad-ar-overlagring-overloading" aria-label="Permalink to &quot;1. Vad är Överlagring (Overloading)?&quot;">​</a></h2><h3 id="definition" tabindex="-1">Definition <a class="header-anchor" href="#definition" aria-label="Permalink to &quot;Definition&quot;">​</a></h3><p>Överlagring innebär att man kan <strong>definiera flera funktioner eller metoder med samma namn</strong>, men med <strong>olika parametrar</strong>. Det är ett sätt att göra en funktion flexibel för olika typer eller antal argument. Även om <strong>traditionell överlagring</strong> (som i t.ex. C++ eller Java) inte finns i Python på samma sätt, kan liknande beteende uppnås med hjälp av <strong>standardargument</strong> och speciella tekniker som <span class="a">*args</span> och <span class="a">**kwargs</span>.</p><h3 id="hur-det-fungerar-i-python" tabindex="-1">Hur det fungerar i Python <a class="header-anchor" href="#hur-det-fungerar-i-python" aria-label="Permalink to &quot;Hur det fungerar i Python&quot;">​</a></h3><p>Python <strong>stöder inte direkt metodöverlagring</strong> som vissa andra språk, men du kan <strong>skapa funktioner som accepterar ett variabelt antal argument</strong> och hanterar dem på olika sätt beroende på inmatningen.</p><h3 id="exempel-pa-overlagring" tabindex="-1">Exempel på överlagring <a class="header-anchor" href="#exempel-pa-overlagring" aria-label="Permalink to &quot;Exempel på överlagring&quot;">​</a></h3><p>Här är ett exempel som simulerar överlagring i Python:</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Matematik</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">args):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # Om ett argument: cirkelns area ( π * r^2)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            radie </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> args[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.14</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> radie </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        elif</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # Om två argument: rektangelns area (längd * bredd)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            längd, bredd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> args</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> längd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bredd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        elif</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # Triangeln: (bas * höjd) / 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            bas, höjd, _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> args         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ignorerar det tredje argumentet (_)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (bas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> höjd) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Fel antal argument&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">matte </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matematik()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Cirkelns area: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">matte.area(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Rektangelns area: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">matte.area(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Triangelns area: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">matte.area(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,10),l=s(`<p>Detta exempel används <span class="a">*args</span> för att acceptera olika antal argument, och beroende på om vi skickar ett, två eller tre <strong>argument</strong> beräknas antingen cirkelns, rektangelns eller triangelns area.</p><h2 id="_2-vad-ar-overskuggning-overriding" tabindex="-1">2. Vad är Överskuggning (Overriding)? <a class="header-anchor" href="#_2-vad-ar-overskuggning-overriding" aria-label="Permalink to &quot;2. Vad är Överskuggning (Overriding)?&quot;">​</a></h2><h3 id="definition-1" tabindex="-1">Definition <a class="header-anchor" href="#definition-1" aria-label="Permalink to &quot;Definition&quot;">​</a></h3><p><strong>Överskuggning</strong> innebär att en metod i en underklass (subklass) har samma namn som en metod i dess basklass (superklass), men den överskriver eller &quot;skuggar&quot; basklassens metod. När en metod överskuggas, körs underklassens funktion istället för basklassens funktion när den kallas via en instans av underklassen.</p><h3 id="hur-det-fungerar-i-python-1" tabindex="-1">Hur det fungerar i Python <a class="header-anchor" href="#hur-det-fungerar-i-python-1" aria-label="Permalink to &quot;Hur det fungerar i Python&quot;">​</a></h3><p>I Python <strong>görs överskuggning automatiskt</strong> när du definierar en <strong>metod med samma namn</strong> i en <strong>subklass</strong> som i <strong>supersklassen</strong>. Du kan även kalla på den ursprungliga metoden från superklassen genom att använda <em><strong>super()</strong></em>.</p><h3 id="exempel-pa-overskuggning" tabindex="-1">Exempel på överskuggning <a class="header-anchor" href="#exempel-pa-overskuggning" aria-label="Permalink to &quot;Exempel på överskuggning&quot;">​</a></h3><p>Här är ett exempel på hur du överskuggar en metod i Python:</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Djur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ljud</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Okänt ljud&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Hund</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Djur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ljud</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Voff!&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Katt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Djur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ljud</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Mjau!&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Skapar instanser</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hund </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Hund()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">katt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Katt()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hund.ljud())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: Voff!</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(katt.ljud())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: Mjau!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,9),t=s('<p>I det här exemplet har vi en <strong>superklass</strong> <strong>Djur</strong> med en metod <em><strong>ljud()</strong></em>. Subklasserna <strong>Hund</strong> och <strong>Katt</strong> överskuggar denna metod och definierar sina egna versioner av <em><strong>ljud()</strong></em>.</p><h2 id="_3-skillnaden-mellan-overlagring-och-overskuggning" tabindex="-1">3. Skillnaden mellan Överlagring och Överskuggning <a class="header-anchor" href="#_3-skillnaden-mellan-overlagring-och-overskuggning" aria-label="Permalink to &quot;3. Skillnaden mellan Överlagring och Överskuggning&quot;">​</a></h2><ul><li><p><span class="a">Överlagring (Overloading)</span> handlar om att skapa flera versioner av en metod eller funktion med samma namn men olika argument eller parameterlistor. Python har inte inbyggt stöd för överlagring som vissa andra språk, men vi kan simulera det med verktyg som <span class="a">*args</span> och <span class="a">**kwargs</span>.</p></li><li><p><span class="a">Överskuggning (Overriding)</span> handlar om att skapa en ny version av en metod i en underklass som ersätter metoden med samma namn i basklassen. Detta är fullt stöds i Python och används ofta inom <span class="a">arv (inheritance)</span>.</p></li></ul><h2 id="sammanfattning" tabindex="-1">Sammanfattning <a class="header-anchor" href="#sammanfattning" aria-label="Permalink to &quot;Sammanfattning&quot;">​</a></h2><p>I den här handledningen har vi gått igenom begreppen <span class="a">överlagring</span> och <span class="a">överskuggning</span> i Python.</p><ul><li><span class="a">Överlagring</span> handlar om att hantera flera funktioner med samma namn men olika parametrar, även om Python inte direkt stöder detta koncept.</li><li><span class="a">Överskuggning</span> innebär att man ersätter en metod i en basklass med en metod med samma namn i en underklass.</li></ul><p>Båda dessa begrepp hjälper till att göra din kod mer flexibel och återanvändbar, särskilt när du arbetar med arv och objektorienterad programmering. Genom att förstå och använda dessa tekniker kan du skriva mer sofistikerade och användarvänliga program i Python.</p>',7),m=JSON.parse('{"title":"Överlagring och Överskuggning","description":"","frontmatter":{"outline":[1,6]},"headers":[],"relativePath":"programming2/part9/index.md","filePath":"programming2/part9/index.md"}'),p={name:"programming2/part9/index.md"},u=Object.assign(p,{setup(h){return(k,g)=>(e(),n("div",null,[r,i(a),l,i(a),t]))}});export{m as __pageData,u as default};
